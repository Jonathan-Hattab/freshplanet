package fr.jonathanhattab.freshplanet;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;

public class Square extends JLabel{
	// ------------ STATIC ATTRIBUTS -----------
	public static int MINE_TYPE = 0;
	public static int BLANK_TYPE = 1;
	
	// ------------ PRIVATE ATTRIBUTS ------------
	private GameBoard gameBoard;
	private int xPos;
	private int yPos;
	private boolean flagged = false;
	private SquareBehaviour behaviour;
	private int type;
	private boolean shown = false;
	
	// --------------- CONSTRUCTOR -----------------
	public Square(GameBoard gameBoard, int xPos, int yPos, int type){
		// Setup display
		//this.setPreferredSize(new Dimension(50,50));
		
		// Setup attributs
		this.gameBoard = gameBoard;
		this.xPos = xPos;
		this.yPos = yPos;
		this.type = type;
		if(type==Square.MINE_TYPE){
			this.behaviour = new MineBehaviour();
			this.setBorder(BorderFactory.createLineBorder(Color.red));
		}else{
			this.behaviour = new BlankBehaviour();
			this.setBorder(BorderFactory.createLineBorder(Color.black));
		}
		
		this.addMouseListener(new gameListener());
	}
	
	
	// ------------------- METHODS -------------------
	private void toggleFlag(){
		if(this.flagged) this.setText("");
		else this.setText("Flag");
		this.flagged = !this.flagged;
	}
	
	// -------------------- GETTERS --------------------
	public int getXPos(){
		return this.xPos;
	}
	public int getYPos(){
		return this.yPos;
	}
	public boolean isShown(){
		return this.shown;
	}
	
	// ----------------- GAME LISTENER ------------------
	private class gameListener implements MouseListener{
		@Override
		public void mouseClicked(MouseEvent e) {
			Square source = (Square) e.getSource();
			if(SwingUtilities.isRightMouseButton(e)){
				source.toggleFlag();
			}else if(SwingUtilities.isLeftMouseButton(e)){
				source.behaviour.onClick(source, source.gameBoard);
			}
			
		}
		public void mousePressed(MouseEvent e) {}
		public void mouseReleased(MouseEvent e) {}
		public void mouseEntered(MouseEvent e) {}
		public void mouseExited(MouseEvent e) {}
		
	}
}
